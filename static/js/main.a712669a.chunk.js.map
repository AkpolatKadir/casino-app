{"version":3,"sources":["history.js","validation/is-empty.js","reducers/authReducer.js","reducers/gameReducer.js","reducers/categoryReducer.js","reducers/index.js","actions/types.js","store.js","components/common/PrivateRoute.js","components/Logo.js","actions/authActions.js","validation/login.js","pages/Login.js","actions/gameActions.js","actions/categoryActions.js","components/Games/Category.js","components/Games/GameItem.js","components/Games/Games.js","pages/Casino.js","pages/PlayGame.js","App.js","serviceWorker.js","index.js"],"names":["createHistory","isEmpty","value","undefined","Object","keys","length","trim","Array","isArray","initialState","user","isAuthenticated","error","data","isLoading","combineReducers","auth","state","arguments","action","type","payload","objectSpread","games","categories","middleware","thunk","enhancer","compose","applyMiddleware","apply","store","createStore","rootReducer","connect","_ref","Component","component","rest","objectWithoutProperties","react_default","a","createElement","react_router","assign","render","props","to","Logo","src","className","alt","loginSuccess","credentials","username","loginFailure","logoutUserSuccess","validateLogin","errors","password","Validator","isValid","Login","validationErrors","onChange","e","_this","setState","defineProperty","target","name","onSubmit","preventDefault","validator","loginUser","resetErrors","_this$state","this","classnames","placeholder","getDerivedStateFromProps","history","push","dispatch","axios","post","then","res","catch","response","fetchGamesRequest","fetchGamesSuccess","fetchGamesFailure","fetchCategoriesRequest","fetchCategoriesSuccess","fetchCategoriesFailure","Category","selected","componentDidMount","getCategories","onSelect","categoryId","_this2","Fragment","map","category","active","id","key","href","onClick","get","err","GameItem","game","icon","description","react_router_dom","concat","code","Games","index","Games_GameItem","Casino","searchFilter","categoryFilter","getGames","onLogoutClick","logoutUser","onSearch","getFilteredGames","onCategorySelect","selectedCategoryId","filteredGames","filter","toString","toLocaleUpperCase","indexOf","categoryIds","includes","player","avatar","event","Games_Games","Games_Category","PlayGame","window","comeon","launch","match","params","gameId","App","defaults","baseURL","process","es","components_Logo","exact","from","path","common_PrivateRoute","Boolean","location","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a712669a.chunk.js","sourcesContent":["import createHistory from \"history/createBrowserHistory\";\r\n\r\nexport default createHistory();\r\n","const isEmpty = value =>\r\n  value === undefined ||\r\n  value === null ||\r\n  (typeof value === \"object\" && Object.keys(value).length === 0) ||\r\n  (typeof value === \"string\" && value.trim().length === 0) ||\r\n  (Array.isArray(value) && value.length === 0);\r\n\r\nexport default isEmpty;\r\n","import isEmpty from \"../validation/is-empty\";\r\n\r\nimport {\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAILURE,\r\n  LOGOUT_SUCCESS\r\n} from \"../actions/types.js\";\r\n\r\nconst initialState = {\r\n  user: {},\r\n  isAuthenticated: false,\r\n  error: null\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOGIN_SUCCESS:\r\n      const isAuthenticated = !isEmpty(action.payload);\r\n\r\n      return {\r\n        isAuthenticated,\r\n        user: action.payload,\r\n        error: null\r\n      };\r\n    case LOGIN_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload.error\r\n      };\r\n    case LOGOUT_SUCCESS:\r\n      return { ...initialState };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  FETCH_GAMES_REQUEST,\r\n  FETCH_GAMES_SUCCESS,\r\n  FETCH_GAMES_FAILURE\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  data: [],\r\n  error: null,\r\n  isLoading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case FETCH_GAMES_REQUEST:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        error: null\r\n      };\r\n    case FETCH_GAMES_SUCCESS:\r\n      return {\r\n        data: action.payload,\r\n        isLoading: false,\r\n        error: null\r\n      };\r\n    case FETCH_GAMES_FAILURE:\r\n      return {\r\n        data: [],\r\n        isLoading: false,\r\n        error: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  FETCH_CATEGORIES_REQUEST,\r\n  FETCH_CATEGORIES_SUCCESS,\r\n  FETCH_CATEGORIES_FAILURE\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  data: [],\r\n  error: null,\r\n  isLoading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case FETCH_CATEGORIES_REQUEST:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        error: null\r\n      };\r\n    case FETCH_CATEGORIES_SUCCESS:\r\n      return {\r\n        data: action.payload,\r\n        isLoading: false,\r\n        error: null\r\n      };\r\n    case FETCH_CATEGORIES_FAILURE:\r\n      return {\r\n        data: [],\r\n        isLoading: false,\r\n        error: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport authReducer from \"./authReducer\";\r\nimport gameReducer from \"./gameReducer\";\r\nimport categoryReducer from \"./categoryReducer\";\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  games: gameReducer,\r\n  categories: categoryReducer\r\n});\r\n","/* AUTH action types. */\r\n\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\";\r\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\r\nexport const RESET_LOGIN_ERROR = \"RESET_LOGIN_ERROR\";\r\n\r\n/* End of AUTH action types. */\r\n\r\n/* GAME action types. */\r\n\r\nexport const FETCH_GAMES_REQUEST = \"FETCH_GAMES_REQUEST\";\r\nexport const FETCH_GAMES_SUCCESS = \"FETCH_GAMES_SUCCESS\";\r\nexport const FETCH_GAMES_FAILURE = \"FETCH_GAMES_FAILURE\";\r\n\r\n/* End of GAME action types. */\r\n\r\n/* CATEGORY action types. */\r\n\r\nexport const FETCH_CATEGORIES_REQUEST = \"FETCH_CATEGORIES_REQUEST\";\r\nexport const FETCH_CATEGORIES_SUCCESS = \"FETCH_CATEGORIES_SUCCESS\";\r\nexport const FETCH_CATEGORIES_FAILURE = \"FETCH_CATEGORIES_FAILURE\";\r\n\r\n/* End of CATEGORY action types. */\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst logger = store => next => action => {\r\n  console.group(action.type);\r\n  console.info(\"Dispatching:\", action);\r\n  const result = next(action);\r\n  console.log(\"Next State:\", store.getState());\r\n  console.groupEnd(action.type);\r\n  return result;\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nlet enhancer = undefined;\r\nif (process.env.REACT_APP_ENV === \"production\") {\r\n  enhancer = compose(applyMiddleware(...middleware));\r\n} else {\r\n  if (window.__REDUX_DEVTOOLS_EXTENSION__) {\r\n    enhancer = compose(\r\n      applyMiddleware(...middleware),\r\n      window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    );\r\n  } else {\r\n    enhancer = compose(applyMiddleware(...middleware, logger));\r\n  }\r\n}\r\n\r\nconst store = createStore(rootReducer, initialState, enhancer);\r\nexport default store;\r\n","import React from \"react\";\r\n\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      auth.isAuthenticated === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from \"react\";\r\n\r\nfunction Logo({ src }) {\r\n  return (\r\n    <div className=\"ui one column center aligned page grid\">\r\n      <div className=\"column twelve wide\">\r\n        <img src={src} alt=\"logo\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Logo;\r\n","import axios from \"axios\";\r\n\r\nimport {\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAILURE,\r\n  LOGOUT_SUCCESS,\r\n  RESET_LOGIN_ERROR\r\n} from \"./types\";\r\n\r\nexport const loginUser = credentials => dispatch => {\r\n  axios\r\n    .post(\"/login\", credentials)\r\n    .then(res => {\r\n      dispatch(loginSuccess(res.data, credentials));\r\n    })\r\n    .catch(error => {\r\n      dispatch(loginFailure(error.response && error.response.data));\r\n    });\r\n};\r\n\r\nexport const logoutUser = username => dispatch => {\r\n  axios.post(\"/logout\", { username });\r\n  dispatch(logoutUserSuccess());\r\n};\r\n\r\nexport const loginSuccess = (user, credentials) => {\r\n  return {\r\n    type: LOGIN_SUCCESS,\r\n    payload: { ...user, username: credentials.username }\r\n  };\r\n};\r\n\r\nconst loginFailure = error => {\r\n  return {\r\n    type: LOGIN_FAILURE,\r\n    payload: error\r\n  };\r\n};\r\n\r\nconst logoutUserSuccess = () => {\r\n  return {\r\n    type: LOGOUT_SUCCESS\r\n  };\r\n};\r\n\r\nexport const resetErrors = () => dispatch => {\r\n  dispatch({\r\n    type: RESET_LOGIN_ERROR\r\n  });\r\n};\r\n","import Validator from \"validator\";\r\nimport isEmpty from \"./is-empty\";\r\n\r\nconst validateLogin = data => {\r\n  let errors = {};\r\n\r\n  data.username = !isEmpty(data.username) ? data.username : \"\";\r\n  data.password = !isEmpty(data.password) ? data.password : \"\";\r\n\r\n  if (Validator.isEmpty(data.username)) {\r\n    errors.username = \"username\";\r\n  }\r\n\r\n  if (Validator.isEmpty(data.password)) {\r\n    errors.password = \"password\";\r\n  }\r\n\r\n  return {\r\n    errors,\r\n    isValid: isEmpty(errors)\r\n  };\r\n};\r\n\r\nexport default validateLogin;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser, resetErrors } from \"../actions/authActions\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nimport validateLogin from \"../validation/login\";\r\n\r\nclass Login extends Component {\r\n  static propTypes = {\r\n    loginUser: PropTypes.func.isRequired,\r\n    resetErrors: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    error: PropTypes.oneOfType([PropTypes.object, PropTypes.string])\r\n  };\r\n\r\n  state = {\r\n    credentials: {\r\n      username: \"\",\r\n      password: \"\"\r\n    },\r\n    validationErrors: {}\r\n  };\r\n\r\n  static getDerivedStateFromProps = (props, state) => {\r\n    const { isAuthenticated } = props.auth;\r\n\r\n    if (isAuthenticated) {\r\n      props.history.push(\"/casino\");\r\n    }\r\n    return state;\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({\r\n      ...this.state,\r\n      credentials: {\r\n        ...this.state.credentials,\r\n        [e.target.name]: e.target.value\r\n      }\r\n    });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { credentials } = this.state;\r\n\r\n    let validator = validateLogin(credentials);\r\n\r\n    if (validator.isValid) {\r\n      this.props.loginUser(credentials);\r\n    } else {\r\n      this.setState({ validationErrors: { ...validator.errors } }, () => {\r\n        this.props.resetErrors();\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { credentials, validationErrors } = this.state;\r\n    const { username, password } = credentials;\r\n\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"ui grid centered\">\r\n          <form onSubmit={this.onSubmit}>\r\n            <div className=\"fields\">\r\n              <div className=\"required field\">\r\n                <div\r\n                  className={classnames(\"ui icon input\", {\r\n                    error: validationErrors.username\r\n                  })}\r\n                >\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    value={username}\r\n                    placeholder=\"Username\"\r\n                    onChange={this.onChange}\r\n                  />\r\n                  <i className=\"user icon\" />\r\n                </div>\r\n              </div>\r\n              <div className=\"required field\">\r\n                <div\r\n                  className={classnames(\"ui icon input\", {\r\n                    error: validationErrors.password\r\n                  })}\r\n                >\r\n                  <input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    value={password}\r\n                    placeholder=\"Password\"\r\n                    onChange={this.onChange}\r\n                  />\r\n                  <i className=\"lock icon\" />\r\n                </div>\r\n              </div>\r\n              <div className=\"field\">\r\n                <div className=\"ui icon input\">\r\n                  <input type=\"submit\" value=\"Login\" />\r\n                  <i className=\"right chevron icon\" />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  error: state.auth.error\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { loginUser, resetErrors }\r\n)(Login);\r\n","import axios from \"axios\";\r\n\r\nimport {\r\n  FETCH_GAMES_REQUEST,\r\n  FETCH_GAMES_FAILURE,\r\n  FETCH_GAMES_SUCCESS\r\n} from \"./types\";\r\n\r\nexport const getGames = () => dispatch => {\r\n  dispatch(fetchGamesRequest());\r\n  axios\r\n    .get(\"/games\")\r\n    .then(res => {\r\n      dispatch(fetchGamesSuccess(res.data));\r\n    })\r\n    .catch(err => {\r\n      dispatch(fetchGamesFailure(err.response && err.response.data));\r\n    });\r\n};\r\n\r\nexport const fetchGamesRequest = () => {\r\n  return {\r\n    type: FETCH_GAMES_REQUEST\r\n  };\r\n};\r\nexport const fetchGamesSuccess = games => {\r\n  return {\r\n    type: FETCH_GAMES_SUCCESS,\r\n    payload: games\r\n  };\r\n};\r\nexport const fetchGamesFailure = error => {\r\n  return {\r\n    type: FETCH_GAMES_FAILURE,\r\n    payload: error\r\n  };\r\n};\r\n","import axios from \"axios\";\r\n\r\nimport {\r\n  FETCH_CATEGORIES_REQUEST,\r\n  FETCH_CATEGORIES_SUCCESS,\r\n  FETCH_CATEGORIES_FAILURE\r\n} from \"./types\";\r\n\r\nexport const getCategories = () => dispatch => {\r\n  dispatch(fetchCategoriesRequest());\r\n  axios\r\n    .get(\"/categories\")\r\n    .then(res => {\r\n      dispatch(fetchCategoriesSuccess(res.data));\r\n    })\r\n    .catch(err => {\r\n      dispatch(fetchCategoriesFailure(err.response && err.response.data));\r\n    });\r\n};\r\n\r\nexport const fetchCategoriesRequest = () => {\r\n  return {\r\n    type: FETCH_CATEGORIES_REQUEST\r\n  };\r\n};\r\nexport const fetchCategoriesSuccess = categories => {\r\n  return {\r\n    type: FETCH_CATEGORIES_SUCCESS,\r\n    payload: categories\r\n  };\r\n};\r\nexport const fetchCategoriesFailure = error => {\r\n  return {\r\n    type: FETCH_CATEGORIES_FAILURE,\r\n    payload: error\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { getCategories } from \"../../actions/categoryActions\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Category extends Component {\r\n  static propTypes = {\r\n    getCategories: PropTypes.func.isRequired,\r\n    categories: PropTypes.array.isRequired,\r\n    error: PropTypes.oneOfType([PropTypes.object, PropTypes.string])\r\n  };\r\n\r\n  state = {\r\n    selected: 0\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.props.getCategories();\r\n  };\r\n\r\n  onSelect = categoryId => {\r\n    const { selected } = this.state;\r\n\r\n    if (selected !== categoryId) {\r\n      this.setState({ selected: categoryId });\r\n      this.props.onSelect(categoryId);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { selected } = this.state;\r\n    const { categories } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <h3 className=\"ui dividing header\">Categories</h3>\r\n        <div className=\"ui selection animated list category items\">\r\n          {categories.map(category => (\r\n            <div\r\n              className={classnames(\"category item\", {\r\n                active: selected === category.id\r\n              })}\r\n              key={category.id}\r\n            >\r\n              <a href=\"#\" onClick={() => this.onSelect(category.id)}>\r\n                <div className=\"content\">\r\n                  <div className=\"header\">{category.name}</div>\r\n                </div>\r\n              </a>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  categories: state.categories.data,\r\n  error: state.categories.error\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getCategories }\r\n)(Category);\r\n","import React from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction GameItem({ game }) {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"ui small image\">\r\n        <img src={game.icon} alt=\"game-icon\" />\r\n      </div>\r\n      <div className=\"content\">\r\n        <div className=\"header\">\r\n          <b className=\"name\">{game.name}</b>\r\n        </div>\r\n        <div className=\"description\">{game.description}</div>\r\n        <div className=\"extra\">\r\n          <Link to={`/games/play/${game.code}`}>\r\n            <div className=\"play ui right floated secondary button inverted\">\r\n              Play\r\n              <i className=\"right chevron icon\" />\r\n            </div>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default GameItem;\r\n","import React from \"react\";\r\n\r\nimport GameItem from \"./GameItem\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Games({ games }) {\r\n  return (\r\n    <React.Fragment>\r\n      <h3 className=\"ui dividing header\">Games</h3>\r\n\r\n      <div className=\"ui relaxed divided game items links\">\r\n        {games.map((game, index) => (\r\n          <div className=\"game item\" key={index}>\r\n            <GameItem game={game} />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nGames.propTypes = {\r\n  games: PropTypes.array.isRequired\r\n};\r\n\r\nexport default Games;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { logoutUser } from \"../actions/authActions\";\r\nimport { getGames } from \"../actions/gameActions\";\r\n\r\nimport Category from \"../components/Games/Category\";\r\nimport Games from \"../components/Games/Games\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Casino extends Component {\r\n  static propTypes = {\r\n    getGames: PropTypes.func.isRequired,\r\n    games: PropTypes.array.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    error: PropTypes.oneOfType([PropTypes.object, PropTypes.string])\r\n  };\r\n\r\n  state = {\r\n    games: [],\r\n    searchFilter: \"\",\r\n    categoryFilter: 0\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.props.getGames();\r\n  };\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (!state.searchFilter && !state.categoryFilter)\r\n      return {\r\n        games: props.games\r\n      };\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  onLogoutClick = e => {\r\n    e.preventDefault();\r\n\r\n    const { auth } = this.props;\r\n    this.props.logoutUser(auth.user.username);\r\n  };\r\n\r\n  onSearch = e => {\r\n    this.setState(\r\n      {\r\n        searchFilter: e.target.value\r\n      },\r\n      () => {\r\n        this.setState({\r\n          games: this.getFilteredGames()\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  onCategorySelect = selectedCategoryId => {\r\n    const { categoryFilter } = this.state;\r\n\r\n    if (categoryFilter !== selectedCategoryId)\r\n      this.setState(\r\n        {\r\n          categoryFilter: selectedCategoryId\r\n        },\r\n        () => {\r\n          this.setState({\r\n            games: this.getFilteredGames()\r\n          });\r\n        }\r\n      );\r\n  };\r\n\r\n  getFilteredGames = () => {\r\n    const { categoryFilter, searchFilter } = this.state;\r\n\r\n    let filteredGames = this.props.games;\r\n\r\n    if (searchFilter)\r\n      filteredGames = filteredGames.filter(game => {\r\n        const value = game.name\r\n          .toString()\r\n          .trim()\r\n          .toLocaleUpperCase(\"en-EN\");\r\n\r\n        if (\r\n          value &&\r\n          value.indexOf(searchFilter.trim().toLocaleUpperCase(\"en-EN\")) !== -1\r\n        ) {\r\n          return true;\r\n        }\r\n\r\n        return false;\r\n      });\r\n\r\n    if (categoryFilter) {\r\n      filteredGames = filteredGames.filter(game =>\r\n        game.categoryIds.includes(categoryFilter)\r\n      );\r\n    }\r\n\r\n    return filteredGames;\r\n  };\r\n\r\n  render() {\r\n    const { games } = this.state;\r\n\r\n    const { auth } = this.props;\r\n    const { player } = auth.user;\r\n\r\n    return (\r\n      <div className=\"casino\">\r\n        <div className=\"ui stackable grid centered\">\r\n          <div className=\"twelve wide column\">\r\n            <div className=\"ui list\">\r\n              {/* <!-- player item template --> */}\r\n              <div className=\"player item\">\r\n                <img\r\n                  className=\"ui avatar image\"\r\n                  src={player.avatar}\r\n                  alt=\"avatar\"\r\n                />\r\n\r\n                <div className=\"content\">\r\n                  <div className=\"header\">\r\n                    <b className=\"name\">{player && player.name}</b>\r\n                  </div>\r\n                  <div className=\"description event\">\r\n                    {player && player.event}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/* <!-- end player item template --> */}\r\n            </div>\r\n            <a href=\"#\" onClick={this.onLogoutClick}>\r\n              <div className=\"logout ui left floated secondary button\">\r\n                <i className=\"left chevron icon\" />\r\n                Log Out\r\n              </div>\r\n            </a>\r\n          </div>\r\n          <div className=\"four wide column\">\r\n            <div className=\"search ui small icon input \">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search Game\"\r\n                onChange={this.onSearch}\r\n              />\r\n              <i className=\"search icon\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"ui grid\">\r\n          <div className=\"twelve wide column\">\r\n            <Games games={games} />\r\n          </div>\r\n          <div className=\"four wide column\">\r\n            <Category onSelect={this.onCategorySelect} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  games: state.games.data,\r\n  error: state.auth.error\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getGames, logoutUser }\r\n)(Casino);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass PlayGame extends Component {\r\n  componentDidMount = () => {\r\n    const comeon = window.comeon;\r\n\r\n    comeon.game.launch(this.props.match.params.gameId);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"ui grid centered\">\r\n          <div className=\"three wide column\">\r\n            <Link to=\"/casino\">\r\n              <div className=\"ui right floated secondary button inverted\">\r\n                <i className=\"left chevron icon\" />\r\n                Back\r\n              </div>\r\n            </Link>\r\n          </div>\r\n          <div className=\"ten wide column\">\r\n            <div id=\"game-launch\" />\r\n          </div>\r\n          <div className=\"three wide column\" />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PlayGame;\r\n","import React, { Component } from \"react\";\nimport { HashRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport history from \"./history\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport PrivateRoute from \"./components/common/PrivateRoute\";\nimport Logo from \"./components/Logo\";\n\nimport Login from \"./pages/Login\";\nimport Casino from \"./pages/Casino\";\nimport PlayGame from \"./pages/PlayGame\";\n\nimport axios from \"axios\";\n\nclass App extends Component {\n  componentDidMount = () => {\n    axios.defaults.baseURL = process.env.REACT_APP_CASINO_API_ENDPOINT;\n  };\n\n  render() {\n    return (\n      <Provider store={store}>\n        <HashRouter history={history}>\n          <Logo src=\"./images/logo.svg\" />\n\n          <div className=\"main container\">\n            <Switch>\n              <Redirect exact from=\"/\" to=\"/login\" />\n              <Route exact path=\"/login\" component={Login} />\n              <PrivateRoute exact path=\"/casino\" component={Casino} />\n              <PrivateRoute path=\"/games/play/:gameId\" component={PlayGame} />\n            </Switch>\n          </div>\n        </HashRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}