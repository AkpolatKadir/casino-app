{"version":3,"sources":["history.js","validation/is-empty.js","reducers/authReducer.js","reducers/gameReducer.js","reducers/categoryReducer.js","reducers/index.js","store.js","components/common/PrivateRoute.js","components/common/Logo.js","validation/login.js","pages/Login.js","pages/PlayGame.js","App.js","serviceWorker.js","index.js","actions/authActions.js","utils/setAuthToken.js","actions/types.js"],"names":["createHistory","isEmpty","value","undefined","Object","keys","length","trim","Array","isArray","initialState","user","isAuthenticated","error","data","isLoading","combineReducers","auth","state","arguments","action","type","LOGIN_SUCCESS","payload","LOGIN_FAILURE","objectSpread","LOGOUT_SUCCESS","games","FETCH_GAMES_REQUEST","FETCH_GAMES_SUCCESS","FETCH_GAMES_FAILURE","categories","FETCH_CATEGORIES_REQUEST","FETCH_CATEGORIES_SUCCESS","FETCH_CATEGORIES_FAILURE","middleware","thunk","enhancer","compose","applyMiddleware","apply","store","createStore","rootReducer","connect","_ref","Component","component","rest","objectWithoutProperties","react_default","a","createElement","react_router","assign","render","props","to","Logo","src","className","alt","validateLogin","errors","username","password","Validator","isValid","Login","credentials","validationErrors","onChange","e","_this","setState","defineProperty","target","name","onSubmit","preventDefault","validator","loginUser","resetErrors","_this$state","this","classnames","placeholder","getDerivedStateFromProps","history","push","PlayGame","componentDidMount","window","comeon","game","launch","match","params","gameId","Fragment","react_router_dom","id","Casino","lazy","__webpack_require__","then","bind","localStorage","dispatch","loginSuccess","JSON","parse","axios","defaults","baseURL","process","App","es","common_Logo","react","fallback","exact","from","path","common_PrivateRoute","Boolean","location","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","post","res","catch","loginFailure","response","logoutUser","removeItem","logoutUserSuccess","setItem","stringify","setAuthToken","RESET_LOGIN_ERROR","d","__webpack_exports__"],"mappings":"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","file":"static/js/main.43ba5560.chunk.js","sourcesContent":["import createHistory from \"history/createBrowserHistory\";\r\n\r\nexport default createHistory();\r\n","const isEmpty = value =>\r\n  value === undefined ||\r\n  value === null ||\r\n  (typeof value === \"object\" && Object.keys(value).length === 0) ||\r\n  (typeof value === \"string\" && value.trim().length === 0) ||\r\n  (Array.isArray(value) && value.length === 0);\r\n\r\nexport default isEmpty;\r\n","import isEmpty from \"../validation/is-empty\";\r\n\r\nimport {\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAILURE,\r\n  LOGOUT_SUCCESS\r\n} from \"../actions/types.js\";\r\n\r\nconst initialState = {\r\n  user: {},\r\n  isAuthenticated: false,\r\n  error: null\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOGIN_SUCCESS:\r\n      const isAuthenticated = !isEmpty(action.payload);\r\n\r\n      return {\r\n        isAuthenticated,\r\n        user: action.payload,\r\n        error: null\r\n      };\r\n    case LOGIN_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload.error\r\n      };\r\n    case LOGOUT_SUCCESS:\r\n      return { ...initialState };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  FETCH_GAMES_REQUEST,\r\n  FETCH_GAMES_SUCCESS,\r\n  FETCH_GAMES_FAILURE\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  data: [],\r\n  error: null,\r\n  isLoading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case FETCH_GAMES_REQUEST:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        error: null\r\n      };\r\n    case FETCH_GAMES_SUCCESS:\r\n      return {\r\n        data: action.payload,\r\n        isLoading: false,\r\n        error: null\r\n      };\r\n    case FETCH_GAMES_FAILURE:\r\n      return {\r\n        data: [],\r\n        isLoading: false,\r\n        error: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  FETCH_CATEGORIES_REQUEST,\r\n  FETCH_CATEGORIES_SUCCESS,\r\n  FETCH_CATEGORIES_FAILURE\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  data: [],\r\n  error: null,\r\n  isLoading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case FETCH_CATEGORIES_REQUEST:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        error: null\r\n      };\r\n    case FETCH_CATEGORIES_SUCCESS:\r\n      return {\r\n        data: action.payload,\r\n        isLoading: false,\r\n        error: null\r\n      };\r\n    case FETCH_CATEGORIES_FAILURE:\r\n      return {\r\n        data: [],\r\n        isLoading: false,\r\n        error: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport authReducer from \"./authReducer\";\r\nimport gameReducer from \"./gameReducer\";\r\nimport categoryReducer from \"./categoryReducer\";\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  games: gameReducer,\r\n  categories: categoryReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst logger = store => next => action => {\r\n  console.group(action.type);\r\n  console.info(\"Dispatching:\", action);\r\n  const result = next(action);\r\n  console.log(\"Next State:\", store.getState());\r\n  console.groupEnd(action.type);\r\n  return result;\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nlet enhancer = undefined;\r\nif (process.env.REACT_APP_ENV === \"production\") {\r\n  enhancer = compose(applyMiddleware(...middleware));\r\n} else {\r\n  if (window.__REDUX_DEVTOOLS_EXTENSION__) {\r\n    enhancer = compose(\r\n      applyMiddleware(...middleware),\r\n      window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    );\r\n  } else {\r\n    enhancer = compose(applyMiddleware(...middleware, logger));\r\n  }\r\n}\r\n\r\nconst store = createStore(rootReducer, initialState, enhancer);\r\nexport default store;\r\n","import React from \"react\";\r\n\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      auth.isAuthenticated === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n  component: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from \"react\";\r\n\r\nfunction Logo({ src }) {\r\n  return (\r\n    <div className=\"ui one column center aligned page grid\">\r\n      <div className=\"column twelve wide\">\r\n        <img src={src} alt=\"logo\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Logo;\r\n","import Validator from \"validator\";\r\nimport isEmpty from \"./is-empty\";\r\n\r\nconst validateLogin = data => {\r\n  let errors = {};\r\n\r\n  data.username = !isEmpty(data.username) ? data.username : \"\";\r\n  data.password = !isEmpty(data.password) ? data.password : \"\";\r\n\r\n  if (Validator.isEmpty(data.username)) {\r\n    errors.username = \"username\";\r\n  }\r\n\r\n  if (Validator.isEmpty(data.password)) {\r\n    errors.password = \"password\";\r\n  }\r\n\r\n  return {\r\n    errors,\r\n    isValid: isEmpty(errors)\r\n  };\r\n};\r\n\r\nexport default validateLogin;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser, resetErrors } from \"../actions/authActions\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nimport validateLogin from \"../validation/login\";\r\n\r\nclass Login extends Component {\r\n  static propTypes = {\r\n    loginUser: PropTypes.func.isRequired,\r\n    resetErrors: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    error: PropTypes.oneOfType([PropTypes.object, PropTypes.string])\r\n  };\r\n\r\n  state = {\r\n    credentials: {\r\n      username: \"\",\r\n      password: \"\"\r\n    },\r\n    validationErrors: {}\r\n  };\r\n\r\n  static getDerivedStateFromProps = (props, state) => {\r\n    const { isAuthenticated } = props.auth;\r\n\r\n    if (isAuthenticated) {\r\n      props.history.push(\"/casino\");\r\n    }\r\n    return state;\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({\r\n      credentials: {\r\n        ...this.state.credentials,\r\n        [e.target.name]: e.target.value.trim()\r\n      }\r\n    });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { credentials } = this.state;\r\n\r\n    let validator = validateLogin(credentials);\r\n\r\n    if (validator.isValid) {\r\n      this.setState({ validationErrors: {} }, () => {\r\n        this.props.loginUser(credentials);\r\n      });\r\n    } else {\r\n      this.setState({ validationErrors: { ...validator.errors } }, () => {\r\n        this.props.resetErrors();\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { credentials, validationErrors } = this.state;\r\n    const { username, password } = credentials;\r\n\r\n    const { error } = this.props;\r\n\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"ui grid centered\">\r\n          <form onSubmit={this.onSubmit}>\r\n            <div className=\"fields\">\r\n              <div className=\"required field\">\r\n                <div\r\n                  className={classnames(\"ui icon input\", {\r\n                    error: validationErrors.username\r\n                  })}\r\n                >\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    value={username}\r\n                    placeholder=\"Username\"\r\n                    onChange={this.onChange}\r\n                  />\r\n                  <i className=\"user icon\" />\r\n                </div>\r\n              </div>\r\n              <div className=\"required field\">\r\n                <div\r\n                  className={classnames(\"ui icon input\", {\r\n                    error: validationErrors.password\r\n                  })}\r\n                >\r\n                  <input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    value={password}\r\n                    placeholder=\"Password\"\r\n                    onChange={this.onChange}\r\n                  />\r\n                  <i className=\"lock icon\" />\r\n                </div>\r\n              </div>\r\n              {error && (\r\n                <label className=\"error\">\r\n                  Username or password is incorrect.\r\n                </label>\r\n              )}\r\n              <div className=\"field\">\r\n                <div className=\"ui icon input\">\r\n                  <input type=\"submit\" value=\"Login\" />\r\n                  <i className=\"right chevron icon\" />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  error: state.auth.error\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { loginUser, resetErrors }\r\n)(Login);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass PlayGame extends Component {\r\n  componentDidMount = () => {\r\n    const comeon = window.comeon;\r\n\r\n    comeon.game.launch(this.props.match.params.gameId);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"ui grid centered\">\r\n          <div className=\"three wide column\">\r\n            <Link to=\"/casino\">\r\n              <div className=\"ui right floated secondary button inverted\">\r\n                <i className=\"two chevron icon\" />\r\n                Back\r\n              </div>\r\n            </Link>\r\n          </div>\r\n          <div className=\"twelve wide column\">\r\n            <div className=\"iframe-container\">\r\n              <div id=\"game-launch\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"three wide column\" />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PlayGame;\r\n","import React, { Component, Suspense, lazy } from \"react\";\nimport { HashRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport history from \"./history\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport PrivateRoute from \"./components/common/PrivateRoute\";\nimport Logo from \"./components/common/Logo\";\n\nimport axios from \"axios\";\n\nimport { loginSuccess } from \"../src/actions/authActions\";\n\nimport Login from \"./pages/Login\";\nimport PlayGame from \"./pages/PlayGame\";\nconst Casino = lazy(() => import(\"./pages/Casino\"));\n\nif (localStorage.auth) {\n  const auth = localStorage.auth;\n\n  store.dispatch(loginSuccess(JSON.parse(auth)));\n}\n\naxios.defaults.baseURL = process.env.REACT_APP_CASINO_API_ENDPOINT;\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <HashRouter history={history}>\n          <Logo src=\"./images/logo.svg\" />\n          <Suspense fallback={<div>Loading...</div>}>\n            <div className=\"main container\">\n              <Switch>\n                <Redirect exact from=\"/\" to=\"/login\" />\n                <Route exact path=\"/login\" component={Login} />\n                <PrivateRoute exact path=\"/casino\" component={Casino} />\n                <PrivateRoute path=\"/games/play/:gameId\" component={PlayGame} />\n              </Switch>\n            </div>\n          </Suspense>\n        </HashRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import axios from \"axios\";\r\n\r\nimport { setAuthToken, removeAuthToken } from \"../utils/setAuthToken\";\r\n\r\nimport {\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAILURE,\r\n  LOGOUT_SUCCESS,\r\n  RESET_LOGIN_ERROR\r\n} from \"./types\";\r\n\r\nexport const loginUser = credentials => dispatch => {\r\n  axios\r\n    .post(\"/login\", credentials)\r\n    .then(res => {\r\n      const auth = { ...res.data, username: credentials.username };\r\n      dispatch(loginSuccess(auth));\r\n    })\r\n    .catch(error => {\r\n      dispatch(loginFailure(error.response && error.response.data));\r\n    });\r\n};\r\n\r\nexport const logoutUser = username => dispatch => {\r\n  axios.post(\"/logout\", { username });\r\n  removeAuthToken();\r\n  dispatch(logoutUserSuccess());\r\n};\r\n\r\nexport const loginSuccess = auth => {\r\n  setAuthToken(auth);\r\n  return {\r\n    type: LOGIN_SUCCESS,\r\n    payload: auth\r\n  };\r\n};\r\n\r\nconst loginFailure = error => {\r\n  return {\r\n    type: LOGIN_FAILURE,\r\n    payload: error\r\n  };\r\n};\r\n\r\nconst logoutUserSuccess = () => {\r\n  return {\r\n    type: LOGOUT_SUCCESS\r\n  };\r\n};\r\n\r\nexport const resetErrors = () => dispatch => {\r\n  dispatch({\r\n    type: RESET_LOGIN_ERROR\r\n  });\r\n};\r\n","const setAuthToken = auth => {\r\n  localStorage.setItem(\"auth\", JSON.stringify(auth));\r\n};\r\n\r\nconst removeAuthToken = () => {\r\n  localStorage.removeItem(\"auth\");\r\n};\r\n\r\nexport { setAuthToken, removeAuthToken };\r\n","/* AUTH action types. */\r\n\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\";\r\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\r\nexport const RESET_LOGIN_ERROR = \"RESET_LOGIN_ERROR\";\r\n\r\n/* End of AUTH action types. */\r\n\r\n/* GAME action types. */\r\n\r\nexport const FETCH_GAMES_REQUEST = \"FETCH_GAMES_REQUEST\";\r\nexport const FETCH_GAMES_SUCCESS = \"FETCH_GAMES_SUCCESS\";\r\nexport const FETCH_GAMES_FAILURE = \"FETCH_GAMES_FAILURE\";\r\n\r\n/* End of GAME action types. */\r\n\r\n/* CATEGORY action types. */\r\n\r\nexport const FETCH_CATEGORIES_REQUEST = \"FETCH_CATEGORIES_REQUEST\";\r\nexport const FETCH_CATEGORIES_SUCCESS = \"FETCH_CATEGORIES_SUCCESS\";\r\nexport const FETCH_CATEGORIES_FAILURE = \"FETCH_CATEGORIES_FAILURE\";\r\n\r\n/* End of CATEGORY action types. */\r\n"],"sourceRoot":""}